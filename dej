#!/bin/bash

# Source directory
src="./"
cd $src;

# Prints a message with a new line at end
printfl () {
    printf "$1\n"
}

# Helps path
helps="data/helps"

# Array for output
typeset -A error

# Errors while entering commands
moreInfo="Try 'dej --help' for more information."

error[commandIsAMust]=\
"You must specify a command.
$moreInfo"

error[badUsage]=\
"Bad usage.
$moreInfo"

error[unknownCommand]=\
"Unknown command
$moreInfo"

error[tooMany]=\
"Too many arguments supplied!
$moreInfo"

# No arguments supplied
if [ $# -eq 0 ]; then
    printfl "${error[commandIsAMust]}"

# An arguments supplied
elif [ $# -eq 1 ]; then
    case $1 in
        # Start PHP process for each command
        start|stop|status)
            sh src/php.sh $1
            ;;
        restart)
            sh src/php.sh stop
            sh src/php.sh start
            ;;
        help|-h|--help)
            printfl "`cat $helps/help.txt`";
            ;;
        config)
            printfl "${error[badUsage]}"
            ;;
        *)
            printfl "${error[unknownCommand]}"
            ;;
    esac

# Two arguments supplied
elif [ $# -eq 2 ]; then
    case $1 in
        # User wants help on specific command
        --help|-h|help)
            case $2 in
                # Print help for each command
                start|stop|restart|status|config)
                    printfl "`cat $helps/$2.txt`"
                    ;;
                *)
                    printfl "${error[unknownCommand]}"
                    ;;
            esac
            ;;
        start|stop|restart|status)
            case $2 in
                --help|-h|help)
                    printfl "`cat $helps/$1.txt`"
                    ;;
                *)
                    printfl "${error[badUsage]}"
                    ;;
            esac
            ;;
        config)
            case $2 in
                # User wants a list of available fields
                list)
                    printfl "`cat $helps/config_list.txt`"
                    ;;
                # User wants to create the configuration file
                create)
                    printfl "Creating configuration file..."
                    mkdir config >/dev/null 2>&1
                    touch config/data.json
                    printfl "Created successfully."
                    ;;
                *)
                    printfl "${error[badUsage]}"
                    ;;
            esac
            ;;
        *)
            printfl "${error[unknownCommand]}"
            ;;
    esac

# Three arguments supplied
elif [ $# -eq 3 ]; then
    case $1 in
        --help|start|stop|restart|status)
            printfl "${error[badUsage]}"
            ;;
        # Change the configuration file (i.e. config/data.json)
        config)
            sh src/php.sh config $2 $3
            ;;
        *)
            printfl "${error[unknownCommand]}"
            ;;
    esac

# Too many arguments (> 3)
else
    printfl "${error[tooMany]}"
fi